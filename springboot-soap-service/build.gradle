plugins {
	id 'org.springframework.boot' version '2.4.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

configurations {
    xjc
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	implementation 'wsdl4j:wsdl4j'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	
	xjc (
		'com.sun.xml.bind:jaxb-core:3.0.1',
		'com.sun.xml.bind:jaxb-xjc:2.3.1',
		'com.sun.xml.bind:jaxb-impl:2.3.1',
		'org.glassfish.jaxb:jaxb-runtime:2.3.3',
        "com.github.jaxb-xew-plugin:jaxb-xew-plugin:1.10",
        "net.java.dev.jaxb2-commons:jaxb-fluent-api:2.1.8"
    )

}

test {
	useJUnitPlatform()
}

task xjc {
    System.setProperty('javax.xml.accessExternalSchema', 'all')
    def jaxbTargetDir = file("src/main/java")
    doLast {
        jaxbTargetDir.mkdirs()
        ant.taskdef(
			name: 'xjc',
			classname: 'com.sun.tools.xjc.XJCTask',
			classpath: configurations.xjc.asPath
        )
        ant.jaxbTargetDir = jaxbTargetDir
        ant.xjc(
			destdir: '${jaxbTargetDir}',
			package: 'com.example.model',
            binding: 'src/main/resources/countryBinding.xml',
            extension: true
        ) {
            schema(dir: "src/main/resources", includes: "countries.xsd")
            arg(value: "-Xxew")
            arg(value: "-Xfluent-api")
        }
    }
}

compileJava.dependsOn xjc